# Automatically load scripting additions on restart
sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# Basic layout configurations
yabai -m config layout bsp
yabai -m config window_placement second_child # first_child | second_child
yabai -m config auto_balance on

yabai -m config mouse_modifier alt
yabai -m config mouse_follows_focus off
yabai -m config focus_follows_mouse off # autofocus | autoraise | off
yabai -m config mouse_drop_action swap # swap | stack

yabai -m config window_topmost on
yabai -m config window_shadow float # on | off | float
yabai -m config window_opacity off
yabai -m config active_window_opacity 1.0
yabai -m config normal_window_opacity 0.4

yabai -m config window_border on
yabai -m config window_border_width 3
yabai -m config active_window_border_color 0xffffffff
yabai -m config normal_window_border_color 0xff555555

yabai -m config top_padding 5
yabai -m config bottom_padding 5
yabai -m config left_padding 5
yabai -m config right_padding 5
yabai -m config window_gap 5

#yabai -m config external_bar all:20:5

# # Yabai Rules
yabai -m rule --add app="^System Preferences$"  manage=off layer=above
# yabai -m rule --add app="GK6+" manage=off layer=above
# yabai -m rule --add app="The Unarchiver" manage=off layer=above
# yabai -m rule --add app="Finder" manage=off #layer=above

# # Assign Apps to Spaces
yabai -m rule --add app="^(Brave Browser|Mail|Chrome|Safari)$" space=1
yabai -m rule --add app="^kitty$" space=2
yabai -m rule --add app="^Fusion 360$" space=3
yabai -m rule --add app="^SuperSlicer$" space=4
# #yabai -m rule --add app="^Finder$" space=finder
#
# # signals
# yabai -m signal --add event=window_destroyed active=yes action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse &> /dev/null || yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id) &> /dev/null"
# yabai -m signal --add event=application_launched app="^Mail$" action="yabai -m space --focus mail &> /dev/null" app="^Mail$"
# yabai -m signal --add event=application_launched app="^Alacritty$" action="yabai -m space --focus code &> /dev/null" app="^Alacritty$"
# #yabai -m signal --add event=application_launched app="^Finder$" action="yabai -m space --focus finder &> /dev/null" app="^Finder$"

# Yabai Indicator Settings
yabai -m signal --add event=mission_control_exit action='echo "refresh" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=display_added action='echo "refresh" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=display_removed action='echo "refresh" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_created action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_destroyed action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_focused action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_moved action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_resized action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_minimized action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_deminimized action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
