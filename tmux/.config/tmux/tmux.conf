#      .
#    .o8
#  .o888oo ooo. .oo.  .oo.   oooo  oooo  oooo    ooo
#    888   `888P"Y88bP"Y88b  `888  `888   `88b..8P'
#    888    888   888   888   888   888     Y888'
#    888 .  888   888   888   888   888   .o8"'88b
#    "888" o888o o888o o888o  `V88V"V8P' o88'   888o



# -- keymappings ------------------------------------------------------------------------

# Map Tmux Leader to Ctrl-a
unbind-key C-b
# set-option -g prefix C-a
set-option -g prefix C-Space
bind-key C-a send-prefix

# Ctrl-R Reload Tmux config:
# bind r source-file ~/.config/tmux/tmux.conf \; display 'Tmux reloaded'
bind r source-file ~/.config/tmux/tmux.conf \; display 'Tmux reloaded'

# Split Windows
bind | split-window -h
bind - split-window -v

# bind-key x kill-pane
bind-key x confirm-before -p "kill-pane#W? (y/n)" kill-pane
# Rename window
bind , command-prompt "rename-window ' %%'" # Prepend a space to the rename command
# Create window and rename
bind v new-window \; command-prompt "rename-window ' %%'"

# Pane resizing
bind-key j resize-pane -D 5
bind-key k resize-pane -U 5
bind-key h resize-pane -L 5
bind-key l resize-pane -R 5


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"


# -- display settings -------------------------------------------------------------------

set -s default-terminal "xterm-256color"
set-option -sa terminal-overrides ",xterm-256color:RGB"
set-option -sa terminal-overrides ",xterm-256color*:Tc"

# Enable RGB support in Tmux with some overrides
set-option -ga terminal-overrides ",xterm*:Tc:smcup@:rmcup@"
set-option -ga terminal-overrides ",screen*:Tc:smcup@:rmcup@"
set-option -ga terminal-overrides ",tmux*:Tc:smcup@:rmcup@"

set-option -g status-position bottom
set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles off          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 1     # redraw status line every 10 seconds


# -- features ---------------------------------------------------------------------------

# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'

# turn on mouse support
set -g mouse on

# faster command sequences
set -s escape-time 0

# increase repeat timeout
set -sg repeat-time 600

# boost history
set -g history-limit 100000

# -- Theme ------------------------------------------------------------------------------

set-option -g status-position top
set -g status-fg terminal
set -g status-bg terminal

# Disable static status
set -g status-left '   '
set -g status-right ''

set-option -g status-justify left

setw -g automatic-rename-format '' #{} #W => window-name variable empty by default
set-window-option -g window-status-current-format '#[bg=color7,fg=color0] #I#W '
set-window-option -g window-status-format '#[bg=terminal,fg=white]  #I#W '


# Colors for pane borders(default)
setw -g pane-border-style fg=color7,bg=default
setw -g pane-active-border-style fg=color1,bg=default

